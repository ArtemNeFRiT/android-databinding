apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
}

dependencies {
    implementation project(':domain')
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlin & rx
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rxKotlinVersion"

    // room
    implementation "android.arch.persistence.room:runtime:$rootProject.architectureComponentVersion"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.architectureComponentVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.architectureComponentVersion"

    // lifecycle
    implementation "android.arch.lifecycle:runtime:$rootProject.architectureComponentVersion"
    implementation "android.arch.lifecycle:extensions:$rootProject.architectureComponentVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.architectureComponentVersion"

    // DI & dagger 2
    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-inline:$rootProject.mockitoVersion"
    testImplementation "android.arch.core:core-testing:$rootProject.architectureComponentVersion"
    testImplementation project(':test-shared')
}